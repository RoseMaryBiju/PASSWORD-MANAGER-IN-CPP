//  PASSWORD MANAGER IN CPP 

#include <bits/stdc++.h> 
using namespace std; 
struct PasswordEntry { 
 string username; 
 string password; 
 string description; 
}; 
vector<PasswordEntry> passwordEntries; void addPasswordEntry() { 
 PasswordEntry newEntry; 
 cout<< " "<<endl; 
 cout << "Enter username: "; 
 cin >> newEntry.username; 
 cout<< " "<<endl;
 cout << "Enter password: "; 
 cin >> newEntry.password; 
 cout<< " "<<endl; 
 cout << "Enter description: "; 
 cin >> newEntry.description; 
 cout<< " "<<endl; 
 passwordEntries.push_back(newEntry);} 
void viewPasswordEntries() { 
 for (auto entry : passwordEntries) { 
 cout<< " "<<endl; 
 cout << "Username: " << entry.username << endl;  cout<< " "<<endl; 
 cout << "Password: " << entry.password << endl;  cout<< " "<<endl; 
 cout << "Description: " << entry.description << endl;
 cout << endl; 
 } 
} 
void searchPasswordEntries() { 
 string searchTerm; 
 cout<< " "<<endl; 
 cout << "Enter search term: "; 
 cin >> searchTerm; 
 cout<< " "<<endl; 
 cout<< "*******"<<endl; 
 cout<< " "<<endl; 
 for (auto entry : passwordEntries) { 
 if (entry.username == searchTerm || entry.description == searchTerm) {  cout << "Username: " << entry.username << endl; 
 cout<< " "<<endl;
 cout << "Password: " << entry.password << endl;  cout<< " "<<endl; 
 cout << "Description: " << entry.description << endl;  cout<< " "<<endl; 
 } 
 } 
} 
void deletePasswordEntry() { 
 int indexToDelete; 
 cout << "Enter index of entry to delete: "; 
 cin >> indexToDelete; 
 passwordEntries.erase(passwordEntries.begin() + indexToDelete); } 
int main() {
 while (true) { 
 int choice; 
 cout<< " "<<endl; 
 cout<< " _________"<<endl; 
 cout<< " / /"<<endl; 
 cout<< " / PASSWORD MANAGER /"<<endl;  cout<< " /________/"<<endl; 
 cout<< " "<<endl; 
 cout << "* * * * * * * * * * * * * * * * * * * *" << endl;  cout << "* *" << endl;  cout << "* 1. Add password entry *" << endl;  cout << "* *" << endl;  cout << "* 2. View password entries *" << endl;  cout << "* *" << endl;  cout << "* 3. Search password entries *" << endl;
 cout << "* *" << endl;  cout << "* 4. Delete password entry *" << endl;  cout << "* *" << endl;  cout << "* 5. Exit *" << endl;  cout << "* *" << endl;  cout << "* * * * * * * * * * * * * * * * * * * *" << endl;  cout << " "<< endl; 
 cout << "~~~~~"<< endl; 
 cout << "Enter choice: ";  
 cin >> choice; 
 cout << "~~~~~"<< endl; 
 switch (choice) { 
 case 1: 
 addPasswordEntry(); 
 break;
 case 2: 
 viewPasswordEntries();  break; 
 case 3: 
 searchPasswordEntries();  break; 
 case 4: 
 deletePasswordEntry();  break; 
 case 5: 
 return 0; 
 default: 
 cout << "Invalid choice" << endl;  } }}
